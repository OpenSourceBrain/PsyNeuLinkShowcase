{
    "graphs": [
        {
            "name": "McCPNet",
            "notes": "Example of simplified McCulloch-Pitts based Network",
            "nodes": {
                "McCPpop0_0": {
                    "type": {
                        "NeuroML": "mccp0"
                    },
                    "name": "McCPpop0_0",
                    "parameters": {},
                    "functions": {}
                },
                "McCPpop0_1": {
                    "type": {
                        "NeuroML": "mccp0"
                    },
                    "name": "McCPpop0_1",
                    "parameters": {},
                    "functions": {}
                },
                "McCPpop0_2": {
                    "type": {
                        "NeuroML": "mccp0"
                    },
                    "name": "McCPpop0_2",
                    "parameters": {},
                    "functions": {}
                },
                "McCPpop1_0": {
                    "type": {
                        "NeuroML": "mccp0"
                    },
                    "name": "McCPpop1_0",
                    "parameters": {},
                    "functions": {}
                },
                "McCPpop1_1": {
                    "type": {
                        "NeuroML": "mccp0"
                    },
                    "name": "McCPpop1_1",
                    "parameters": {},
                    "functions": {}
                },
                "McCPpop1_2": {
                    "type": {
                        "NeuroML": "mccp0"
                    },
                    "name": "McCPpop1_2",
                    "parameters": {},
                    "functions": {}
                }
            },
            "edges": {
                "Edge McCPpop0_0 to McCPpop1_0": {
                    "name": "Edge McCPpop0_0 to McCPpop1_0",
                    "type": {
                        "NeuroML": "rsDL"
                    },
                    "parameters": {},
                    "functions": {},
                    "sender_port": "OutputPort",
                    "receiver_port": "InputPort",
                    "sender": "McCPpop0_0",
                    "receiver": "McCPpop1_0",
                    "weight": 0.9649015609162157
                },
                "Edge McCPpop0_0 to McCPpop1_1": {
                    "name": "Edge McCPpop0_0 to McCPpop1_1",
                    "type": {
                        "NeuroML": "rsDL"
                    },
                    "parameters": {},
                    "functions": {},
                    "sender_port": "OutputPort",
                    "receiver_port": "InputPort",
                    "sender": "McCPpop0_0",
                    "receiver": "McCPpop1_1",
                    "weight": 0.5410881855511303
                },
                "Edge McCPpop0_0 to McCPpop1_2": {
                    "name": "Edge McCPpop0_0 to McCPpop1_2",
                    "type": {
                        "NeuroML": "rsDL"
                    },
                    "parameters": {},
                    "functions": {},
                    "sender_port": "OutputPort",
                    "receiver_port": "InputPort",
                    "sender": "McCPpop0_0",
                    "receiver": "McCPpop1_2",
                    "weight": 0.6014634495610515
                },
                "Edge McCPpop0_1 to McCPpop1_0": {
                    "name": "Edge McCPpop0_1 to McCPpop1_0",
                    "type": {
                        "NeuroML": "rsDL"
                    },
                    "parameters": {},
                    "functions": {},
                    "sender_port": "OutputPort",
                    "receiver_port": "InputPort",
                    "sender": "McCPpop0_1",
                    "receiver": "McCPpop1_0",
                    "weight": 0.5790026861873665
                },
                "Edge McCPpop0_1 to McCPpop1_1": {
                    "name": "Edge McCPpop0_1 to McCPpop1_1",
                    "type": {
                        "NeuroML": "rsDL"
                    },
                    "parameters": {},
                    "functions": {},
                    "sender_port": "OutputPort",
                    "receiver_port": "InputPort",
                    "sender": "McCPpop0_1",
                    "receiver": "McCPpop1_1",
                    "weight": 0.5564325605562156
                },
                "Edge McCPpop0_2 to McCPpop1_0": {
                    "name": "Edge McCPpop0_2 to McCPpop1_0",
                    "type": {
                        "NeuroML": "rsDL"
                    },
                    "parameters": {},
                    "functions": {},
                    "sender_port": "OutputPort",
                    "receiver_port": "InputPort",
                    "sender": "McCPpop0_2",
                    "receiver": "McCPpop1_0",
                    "weight": 0.35523914744298335
                },
                "Edge McCPpop0_2 to McCPpop1_1": {
                    "name": "Edge McCPpop0_2 to McCPpop1_1",
                    "type": {
                        "NeuroML": "rsDL"
                    },
                    "parameters": {},
                    "functions": {},
                    "sender_port": "OutputPort",
                    "receiver_port": "InputPort",
                    "sender": "McCPpop0_2",
                    "receiver": "McCPpop1_1",
                    "weight": 0.9335154980423467
                },
                "Edge McCPpop0_2 to McCPpop1_2": {
                    "name": "Edge McCPpop0_2 to McCPpop1_2",
                    "type": {
                        "NeuroML": "rsDL"
                    },
                    "parameters": {},
                    "functions": {},
                    "sender_port": "OutputPort",
                    "receiver_port": "InputPort",
                    "sender": "McCPpop0_2",
                    "receiver": "McCPpop1_2",
                    "weight": 0.5301612069115903
                }
            },
            "parameters": {}
        }
    ]
}